//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DCEM.UserCenterService.Main.Application.Services
{
    using DCEM.UserCenterService.Main.Application.Repository.Contrac;
    using DCEM.UserCenterService.Main.Application.Services.Contrac;
    using DCEM.UserCenterService.Main.ViewModel.Request;
    using DCEM.UserCenterService.Main.ViewModel.Response;
    using System.Threading.Tasks;
    using MSLibrary.Xrm;
    using System.Collections.Generic;
    using MSLibrary;
    using DCEM.Main;
    using DCEM.Main.Entities;
    using System;
    using DCEM.UserCenterService.Main.Common;
    using System.Xml.Linq;


    public class CampaignonlineregService : ICampaignonlineregService
    {

        private ICrmService _crmService;
        private const string entityName = "mcs_campaignonlinereg";

        public ICampaignonlineregRepository _campaignonlineregRepository;

        public CampaignonlineregService(ICrmService crmService, ICampaignonlineregRepository campaignonlineregRepository)
        {
            _crmService = crmService;
            _campaignonlineregRepository = campaignonlineregRepository;
        }


        public async Task<SalesOrderListResponse> getlist(CampaignonlineregListRequest req)
        {
            try
            {
                var crmRequestHelper = new CrmRequestHelper();
                var response = new SalesOrderListResponse() { };
                XDocument fetchXdoc = null;
                fetchXdoc = _campaignonlineregRepository.QueryList(req);
                var entities = await crmRequestHelper.ExecuteAsync(_crmService, entityName, fetchXdoc);
                response.orders = entities.Results; ;
                response.ALLTotalCount = entities.Count;
                response.PageSize = req.PageSize;
                response.CurrentPage = req.PageIndex;
                return response;
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        public async Task<CrmEntity> getdetail(Guid id)
        {
            try
            {
                var crmRequestHelper = new CrmRequestHelper();
                XDocument fetchXdoc = null;
                fetchXdoc = _campaignonlineregRepository.QueryDetail(id);
                var entities = await crmRequestHelper.ExecuteAsync(_crmService, entityName, fetchXdoc);
                return entities.Results[0];
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

    }
}
