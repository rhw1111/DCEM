{"version":3,"sources":["./src/app/base/base.ser/http-service.service.ts"],"names":[],"mappings":"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","file":"default~base-uc-com-login-login-module~serving-technical-support-com-list-list-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { isObject, isFunction, debug } from 'util';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { AppConfig } from '../../app.config';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n  isLoadingOpen: boolean = false;\r\n  private InterfacePreURL=\"\";\r\n  constructor(\r\n    private http: HttpClient,\r\n    private loadingCtrl: LoadingController,\r\n    private toastCtrl:ToastController\r\n  ) {\r\n\r\n  }\r\n  public postForToaken(\r\n    url: string,\r\n    params: any,\r\n    successCallback,\r\n    errorCallback\r\n  ): any {\r\n    // 此处使用的post模式为非严格模式，如果要使用严格模式，请把参数放在第二个位置 覆盖null\r\n    return this.http\r\n      .post(this.getEnvironmentUrl()+url,null, {\r\n        params: this.encodeHttpParams(params),\r\n        headers: this.getHeaders()\r\n      })\r\n      .subscribe(\r\n        (res: any) => {\r\n          console.log(res);\r\n          this.responseSuccess(res, function(msg) {\r\n            if (successCallback) {\r\n              successCallback(res, msg);\r\n            }\r\n          });\r\n        },\r\n        err => {\r\n          if (errorCallback) {\r\n            errorCallback(err);\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  //get数据\r\n  getForToaken(url: string, params?: any): any {\r\n    return this.http.get(this.getEnvironmentUrl()+url, {\r\n      params: this.encodeComplexHttpParams(params),\r\n      headers: this.getHeaders()\r\n    });\r\n  }\r\n  GET(\r\n    url: string,\r\n    params: any,\r\n    callback?: (res: any, err: any) => void\r\n  ): void {\r\n    this.http\r\n      .get(this.getEnvironmentUrl()+url, { params: this.encodeComplexHttpParams(params) })\r\n      .subscribe(\r\n        res => {\r\n          console.log('get res=' + res);\r\n          callback && callback(res, null);\r\n        },\r\n        error => {\r\n          callback && callback(null, error);\r\n        }\r\n      );\r\n  }\r\n\r\n  POST(\r\n    url: string,\r\n    params: any,\r\n    callback?: (res: any, error: any) => void\r\n  ): void {\r\n    console.log('POST...');\r\n    this.http.post(this.getEnvironmentUrl()+url, this.encodeComplexHttpParams(params)).subscribe(\r\n      (res: any) => {\r\n        console.log('POST res=' + res);\r\n        console.log(res);\r\n        callback && callback(res, null);\r\n      },\r\n      err => {\r\n        console.log('POST err=');\r\n        console.log(err);\r\n        this.requestFailed(err);\r\n        callback && callback(null, err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //对象参数请求\r\n  private encodeHttpParams(params: any): any {\r\n    if (!params) return null;\r\n    return new HttpParams({fromObject: params});\r\n  }\r\n\r\n  //字符串参数封装\r\n  private encodeComplexHttpParams(params: any): any {\r\n    if (!params) return null;\r\n    return new HttpParams({ fromString: params });\r\n  }\r\n\r\n  /**\r\n   * 处理响应的事件\r\n   * @param res\r\n   * @param {Function} error\r\n   */\r\n  private responseSuccess(res: any, callback) {\r\n    if (res.code !== '0') {\r\n      // 失败\r\n      if (res.msg) {\r\n        callback({ code: res.code, msg: res.msg });\r\n      } else {\r\n        const data = res.datas;\r\n        let errorMsg = res.message;\r\n        if(data!=null){\r\n          data.map(i => {\r\n            errorMsg = i.errorMsg + '\\n';\r\n          });\r\n        }  \r\n        callback({ code: res.code, msg: errorMsg });\r\n      }\r\n    } else {\r\n      callback(res);\r\n    }\r\n  }\r\n  /**\r\n   * 处理请求失败事件\r\n   * @param url\r\n   * @param err\r\n   */\r\n  private requestFailed(err) {\r\n    let msg = '请求发生异常';\r\n    const status = err.status;\r\n    console.log('status=' + status);\r\n    if (status === 0) {\r\n      msg = '请求失败，请求响应出错';\r\n    } else if (status === 404) {\r\n      msg = '请求失败，未找到请求地址';\r\n    } else if (status === 500) {\r\n      msg = '请求失败，服务器出错，请稍后再试';\r\n    } else {\r\n      msg = '未知错误，请检查网络';\r\n    }\r\n    return msg;\r\n  }\r\n\r\n\r\n  /**\r\n   * 头部信息获取，主要用于处理token\r\n  **/\r\n  private getHeaders() {\r\n    const token = this.getToken();\r\n    console.log(token);\r\n    return token ? new HttpHeaders({ \r\n      token: token,\r\n      'Content-Type': 'application/json;charset=UTF-8',\r\n      'Accept': 'application/json' \r\n    }) : null;\r\n  }\r\n  /*\r\n   * 使用本地缓存的方式来获取token信息\r\n   */\r\n  getToken() {\r\n    return window.localStorage.getItem('auth-token');\r\n  }\r\n\r\n  /**\r\n   * 将token信息保存到本地缓存中 用缓存的形式实现token验证\r\n   * @param token\r\n   */\r\n  setToken(token) {\r\n    // 目前只解析token字段，缓存先只存该字段\r\n    // JSON.stringify(token)\r\n    window.localStorage.setItem('auth-token', token);\r\n  }\r\n  //获取接口请求地址\r\n  getEnvironmentUrl() {\r\n    return  window.localStorage.getItem('environmenturl');\r\n  }\r\n  //跟进环境设置请求地址\r\n  setEnvironmentUrl(environment) {\r\n    let url=\"\";\r\n    console.log(\"environment:\"+environment);\r\n    switch (environment) {\r\n      case 'Dev':\r\n        url=\"https://subcrmdevapi.sokon.com/dcem\";\r\n          break;\r\n      case 'Sit':\r\n        url=\"https://subcrmdevapi.sokon.com/dcem\";\r\n          break;\r\n      case 'Uat':\r\n        url=\"https://subcrmuatapi.sokon.com/dcem\";\r\n          break;\r\n      case 'Pro':\r\n        url=\"https://mscrm.sokon.com/dcem\";\r\n          break;    \r\n      default:\r\n        url=\"http://localhost:52151\";\r\n          break;\r\n  }\r\n    window.localStorage.setItem('environmenturl', url);\r\n  }\r\n  /**\r\n   * 清理token\r\n   */\r\n  clearToken() {\r\n    window.localStorage.setItem('auth-token', null);\r\n  }\r\n\r\n  \r\n  /**\r\n   * 统一调用此方法显示loading\r\n   * @param content 显示的内容\r\n   */\r\n  async showLoading(content: string) {\r\n    if (!this.isLoadingOpen) {\r\n      const loading = await this.loadingCtrl.create({\r\n        message: content,\r\n        duration: 300,\r\n        translucent: false\r\n      });\r\n      console.log('showLoading....');\r\n      return await loading.present();\r\n    }\r\n  }\r\n  /**\r\n   * 关闭loading\r\n  */\r\n  async hideLoading() {\r\n    console.log('hideLoading....');\r\n    if (this.isLoadingOpen) {\r\n      await this.loadingCtrl.dismiss();\r\n      this.isLoadingOpen = false;\r\n    }\r\n  }\r\n  /**\r\n   * Toast 提示\r\n   * @param message \r\n   */\r\n  async presentToastError(message) {\r\n    const toast = await this.toastCtrl.create({\r\n      message: message,\r\n      duration: 2000,\r\n      color:\"danger\",\r\n      position:\"top\"\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async presentToastSucess(message) {\r\n    const toast = await this.toastCtrl.create({\r\n      message: message,\r\n      duration: 1500,\r\n      color:\"success\",\r\n      position:\"middle\"\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n/*------------------------------------------------------- */\r\n  /*\r\n  api/focus  \r\n  */\r\n  ajaxGet(url:String) {\r\n\r\n    var api = this.getEnvironmentUrl() + url;\r\n    return new Promise((resove, reject) => {\r\n      this.http.get(api).subscribe((response) => {\r\n        resove(response);\r\n      }, (error) => {\r\n        reject(error);\r\n      })\r\n    })\r\n  }\r\n\r\n  /*\r\n api/focus  \r\n */\r\n  ajaxPost(url:String, json:Object) {\r\n    var api = this.getEnvironmentUrl() + url;\r\n    return new Promise((resove, reject) => {\r\n      this.http.post(api, json).subscribe((response) => {\r\n        resove(response);\r\n      }, (error) => {\r\n        reject(error);\r\n      })\r\n    })\r\n  }\r\n\r\n  /*本地缓存处理*/\r\n  /*\r\n   * 使用本地缓存的方式来获取数据\r\n   */\r\n  GetDataCache(name) {\r\n    return window.localStorage.getItem('datacache-'+name);\r\n  }\r\n\r\n  /**\r\n   *  将数据存储到本地缓存中\r\n   * @param name\r\n   * @param data\r\n   */\r\n  SetDataCache(name,data) {\r\n    window.localStorage.setItem('datacache-'+name, data);\r\n  }\r\n  /*\r\n   * 清楚本地缓存数据\r\n   */\r\n  ClearDataCache(name) {\r\n    return window.localStorage.setItem('datacache-'+name,\"\");\r\n  }\r\n}\r\n"],"sourceRoot":""}