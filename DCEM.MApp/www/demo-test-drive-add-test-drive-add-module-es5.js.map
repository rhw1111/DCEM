{"version":3,"sources":["./src/app/demo/test-drive-add/test-drive-add.page.html","./node_modules/silly-datetime/dest/index.js","./src/app/demo/test-drive-add/test-drive-add.module.ts","./src/app/demo/test-drive-add/test-drive-add.page.scss","./src/app/demo/test-drive-add/test-drive-add.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,q7E;;;;;;;;;;;;ACAa;;AAEb;AACA;AACA,YAAY,IAAI;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,QAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;;;;;;;;;;;;AChJyC;AACM;AACF;AACU;AAEV;AAEY;AAEzD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAgB;KAC5B;CACF,CAAC;AAWF;IAAA;IAAqC,CAAC;IAAzB,sBAAsB;QATlC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAgB,CAAC;SACjC,CAAC;OACW,sBAAsB,CAAG;IAAD,6BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBnC,+DAA+D,mK;;;;;;;;;;;;;;;;;;;;;;ACAb;AACqB;AACd;AACzB;AAOhC;IAGE,0BAAoB,WAAuB,EAAS,OAAqB;QAArD,gBAAW,GAAX,WAAW,CAAY;QAAS,YAAO,GAAP,OAAO,CAAc;QADlE,qBAAgB,GAAC,IAAI,aAAa,EAAE,CAAC;IACiC,CAAC;IAE9E,mCAAQ,GAAR;IACA,CAAC;IAED,mCAAQ,GAAR;QAAA,iBA2CC;QA1CC,IAAI,WAAW,GAAC,EAAE,CAAC;QACnB,IAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAE,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAE,SAAS,EAAC;YACnF,WAAW,IAAE,cAAc,CAAC;SAC7B;QACD,IAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAE,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAE,SAAS,EAAC;YACrF,WAAW,IAAE,cAAc,CAAC;SAC7B;QACD,IAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAE,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,IAAE,SAAS,EAAC;YACnF,WAAW,IAAE,aAAa,CAAC;SAC5B;QACD,IAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAE,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,IAAE,SAAS,EAAC;YACrF,WAAW,IAAE,eAAe,CAAC;SAC9B;QACD,IAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,IAAE,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC,eAAe,IAAE,SAAS,EAAC;YACjG,WAAW,IAAE,gBAAgB,CAAC;SAC/B;QAED,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAC,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,qDAAE,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;QAC3F,IAAG,WAAW,IAAE,EAAE,EAClB;YACE,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;SACjD;aACG;YACF,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,oBAAoB,EAAC,IAAI,CAAC,gBAAgB,EAAC,UAAC,GAAG;gBAC5E,IAAG,GAAG,CAAC,OAAO,IAAE,IAAI,EAAC;oBACnB,KAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC;wBAChD,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;oBACtB,CAAC,CAAC,CAAC;iBACJ;qBACG;oBACF,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;iBAC7C;YACH,CAAC,EAAC,UAAC,GAAG;gBACJ,IAAG,GAAG,IAAE,IAAI,EAAC;oBACX,IAAG,GAAG,CAAC,EAAE,IAAE,KAAK,EAAC;wBACf,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;qBAC7C;iBACF;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;gBAhD+B,+EAAW;gBAAiB,4DAAa;;IAH9D,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,uKAAyC;;SAE1C,CAAC;+EAIgC,+EAAW,EAAiB,4DAAa;OAH9D,gBAAgB,CAoD5B;IAAD,uBAAC;CAAA;AApD4B;AAuD7B;IAAA;IAQA,CAAC;IAAD,oBAAC;AAAD,CAAC","file":"demo-test-drive-add-test-drive-add-module-es5.js","sourcesContent":["module.exports = \"<ion-header translucent>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n        </ion-buttons>\\n      <ion-title>创建试乘试驾记录</ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-content fullscreen>\\n    <form (submit)=\\\"onSubmit()\\\">\\n      <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n            <ion-item>\\n              <ion-label>姓名<ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input [(ngModel)]=\\\"CurrentTestDrive.UserName\\\" id=\\\"UserName\\\" name=\\\"UserName\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>手机号<ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input [(ngModel)]=\\\"CurrentTestDrive.UserPhone\\\" id=\\\"UserPhone\\\" name=\\\"UserPhone\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>车型<ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-input [(ngModel)]=\\\"CurrentTestDrive.CarModel\\\" id=\\\"CarModel\\\" name=\\\"CarModel\\\"></ion-input>\\n            </ion-item>\\n            <ion-item>\\n              <ion-label>试驾日期<ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n            <ion-datetime value=\\\"YYYY-MM-DD\\\" display-format=\\\"YYYY-MM-DD\\\" picker-format=\\\"YYYY-MM-DD\\\" placeholder=\\\"选择日期\\\"  [(ngModel)]=\\\"CurrentTestDrive.OrderTime\\\" id=\\\"OrderTime\\\" name=\\\"OrderTime\\\"  ></ion-datetime>\\n          </ion-item>\\n            <ion-item>\\n              <ion-label>试驾时间<ion-text color=\\\"danger\\\">*</ion-text></ion-label>\\n              <ion-datetime value=\\\"hh:mm\\\" display-format=\\\"hh:mm\\\" picker-format=\\\"hh:mm\\\"  placeholder=\\\"选择时间段\\\" [(ngModel)]=\\\"CurrentTestDrive.TestDriveTimeId\\\" id=\\\"TestDriveTimeId\\\" name=\\\"TestDriveTimeId\\\"></ion-datetime>\\n            </ion-item>\\n            \\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">基本信息</ion-label>\\n          <ion-input placeholder=\\\"省\\\"></ion-input>\\n          <ion-input placeholder=\\\"市\\\"></ion-input>\\n          <ion-input placeholder=\\\"区\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-item>\\n          <ion-label position=\\\"stacked\\\">备注</ion-label>\\n          <ion-textarea rows=\\\"8\\\"></ion-textarea>\\n        </ion-item>\\n      </ion-list>\\n\\n      <div class=\\\"ion-padding\\\">\\n        <ion-button expand=\\\"block\\\" type=\\\"submit\\\" class=\\\"ion-no-margin\\\">创建</ion-button>\\n      </div>\\n    </form>\\n  </ion-content>\\n\"","'use strict';\n\n/**\n * 将输入的任意对象转换成 Date，如果装换失败将返回当前时间\n * @param  {any} datetime 需要被格式化的时间\n * @return {Date}         转换好的 Date\n */\nfunction getDateObject(datetime) {\n  var t = datetime instanceof Date ? datetime : new Date(datetime);\n  if (!t.getDate()) {\n    t = new Date();\n  }\n  return t;\n}\n\n/**\n * 格式化时间\n * @param  {Date}   datetime  需要被格式化的时间\n * @param  {string} formatStr 格式化字符串，默认为 'YYYY-MM-DD HH:mm:ss'\n * @return {string}           格式化后的时间字符串\n */\nfunction format(datetime, formatStr) {\n  var t = getDateObject(datetime);\n  var hours = undefined,\n      o = undefined,\n      i = 0;\n  formatStr = formatStr || 'YYYY-MM-DD HH:mm:ss';\n  hours = t.getHours();\n  o = [['M+', t.getMonth() + 1], ['D+', t.getDate()],\n  // H 24小时制\n  ['H+', hours],\n  // h 12小时制\n  ['h+', hours > 12 ? hours - 12 : hours], ['m+', t.getMinutes()], ['s+', t.getSeconds()]];\n  // 替换 Y\n  if (/(Y+)/.test(formatStr)) {\n    formatStr = formatStr.replace(RegExp.$1, (t.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  // 替换 M, D, H, h, m, s\n  for (; i < o.length; i++) {\n    if (new RegExp('(' + o[i][0] + ')').test(formatStr)) {\n      formatStr = formatStr.replace(RegExp.$1, RegExp.$1.length === 1 ? o[i][1] : ('00' + o[i][1]).substr(('' + o[i][1]).length));\n    }\n  }\n  // 替换 a/A 为 am, pm\n  return formatStr.replace(/a/ig, hours > 11 ? 'pm' : 'am');\n}\n\n/**\n * CONST and VAR for .fromNow\n */\n// 预设语言：英语\nvar LOCALE_EN = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  mm: '%s minutes',\n  hh: '%s hours',\n  dd: '%s days',\n  MM: '%s months',\n  yy: '%s years'\n};\n// 预设语言：简体中文\nvar LOCALE_ZH_CN = {\n  future: '%s内',\n  past: '%s前',\n  s: '几秒',\n  mm: '%s分钟',\n  hh: '%s小时',\n  dd: '%s天',\n  MM: '%s月',\n  yy: '%s年'\n};\n// 当前本地化语言对象\nvar _curentLocale = undefined;\n\n/**\n * 修改本地化语言\n * @param  {string|Object}   string: 预设语言 `zh-cn` 或 `en`；Object: 自定义 locate 对象\n */\nfunction locate(arg) {\n  var newLocale = undefined,\n      prop = undefined;\n  if (typeof arg === 'string') {\n    newLocale = arg === 'zh-cn' ? LOCALE_ZH_CN : LOCALE_EN;\n  } else {\n    newLocale = arg;\n  }\n  if (!_curentLocale) {\n    _curentLocale = {};\n  }\n  for (prop in newLocale) {\n    if (newLocale.hasOwnProperty(prop) && typeof newLocale[prop] === 'string') {\n      _curentLocale[prop] = newLocale[prop];\n    }\n  }\n}\n\n/**\n * CONST for .fromNow\n */\n// 各计算区间\nvar DET_STD = [['yy', 31536e6], // 1000 * 60 * 60 * 24 * 365 一年月按 365 天算\n['MM', 2592e6], // 1000 * 60 * 60 * 24 * 30 一个月按 30 天算\n['dd', 864e5], // 1000 * 60 * 60 * 24\n['hh', 36e5], // 1000 * 60 * 60\n['mm', 6e4], // 1000 * 60\n['s', 0]];\n\n/**\n * 计算给出时间和当前时间的时间距离\n * @param  {Date}   datetime 需要计算的时间\n * @return {string}          时间距离\n */\n// 只要大于等于 0 都是秒\nfunction fromNow(datetime) {\n  if (!_curentLocale) {\n    // 初始化本地化语言为 en\n    locate('');\n  }\n  var det = +new Date() - +getDateObject(datetime);\n  var format = undefined,\n      str = undefined,\n      i = 0,\n      detDef = undefined,\n      detDefVal = undefined;\n  if (det < 0) {\n    format = _curentLocale.future;\n    det = -det;\n  } else {\n    format = _curentLocale.past;\n  }\n  for (; i < DET_STD.length; i++) {\n    detDef = DET_STD[i];\n    detDefVal = detDef[1];\n    if (det >= detDefVal) {\n      str = _curentLocale[detDef[0]].replace('%s', parseInt(det / detDefVal, 0) || 1);\n      break;\n    }\n  }\n  return format.replace('%s', str);\n}\n\nexports.format = format;\nexports.locate = locate;\nexports.fromNow = fromNow;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestDriveAddPage } from './test-drive-add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestDriveAddPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [TestDriveAddPage]\n})\nexport class TestDriveAddPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlbW8vdGVzdC1kcml2ZS1hZGQvdGVzdC1kcml2ZS1hZGQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../../base/base.ser/http-service.service';\nimport { NavController,NavParams } from '@ionic/angular';\nimport sd from 'silly-datetime';\n\n@Component({\n  selector: 'app-test-drive-add',\n  templateUrl: './test-drive-add.page.html',\n  styleUrls: ['./test-drive-add.page.scss'],\n})\nexport class TestDriveAddPage implements OnInit {\n\n  public CurrentTestDrive=new TestDriveInfo();\n  constructor(private httpService:HttpService,private navCtrl:NavController) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit(){\n    let erroMessage=\"\";\n    if(this.CurrentTestDrive.UserName==null || this.CurrentTestDrive.UserName==undefined){\n      erroMessage+=\"用户名不能为空!\\r\\n\";\n    }  \n    if(this.CurrentTestDrive.UserPhone==null || this.CurrentTestDrive.UserPhone==undefined){\n      erroMessage+=\"手机号不能为空!\\r\\n\";\n    } \n    if(this.CurrentTestDrive.CarModel==null || this.CurrentTestDrive.CarModel==undefined){\n      erroMessage+=\"车型不能为空!\\r\\n\";\n    } \n    if(this.CurrentTestDrive.OrderTime==null || this.CurrentTestDrive.OrderTime==undefined){\n      erroMessage+=\"试驾日期不能为空!\\r\\n\";\n    } \n    if(this.CurrentTestDrive.TestDriveTimeId==null || this.CurrentTestDrive.TestDriveTimeId==undefined){\n      erroMessage+=\"试驾时间段不能为空!\\r\\n\";\n    } \n\n    this.CurrentTestDrive.ID=\"\";\n    this.CurrentTestDrive.Status=1;\n    this.CurrentTestDrive.OrderTime = sd.format(this.CurrentTestDrive.OrderTime, 'YYYY-MM-DD');\n    if(erroMessage!=\"\")\n    {\n      this.httpService.presentToastError(erroMessage);\n    }\n    else{\n      this.httpService.postForToaken(\"/api/TestDrive/Add\",this.CurrentTestDrive,(res)=>{\n        if(res.success==true){\n          this.httpService.presentToastSucess(\"创建成功！\").then(()=>{\n            this.navCtrl.back();\n          });\n        }\n        else{\n          this.httpService.presentToastError(\"创建失败！\");\n        }\n      },(err)=>{\n        if(err!=null){\n          if(err.ok==false){\n            this.httpService.presentToastError(\"请求失败！\");\n          }\n        }\n      });\n    }\n  }\n}\n\n\nexport class TestDriveInfo {\n  ID:string;\n  UserName:string;\n  UserPhone:string;\n  Status:number;\n  CarModel:string;\n  OrderTime:string;\n  TestDriveTimeId:string;\n}"],"sourceRoot":""}