{"version":3,"sources":["./src/app/serving/technical-support.com/list/list.page.html","./node_modules/silly-datetime/dest/index.js","./src/app/serving/technical-support.com/list/list.module.ts","./src/app/serving/technical-support.com/list/list.page.scss","./src/app/serving/technical-support.com/list/list.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gkCAAgkC,WAAW,mKAAmK,eAAe,qCAAqC,eAAe,oCAAoC,kCAAkC,8vB;;;;;;;;;;;;ACA12C;;AAEb;AACA;AACA,YAAY,IAAI;AAChB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,QAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0B;;;;;;;;;;;;;;;;;;;;;;AChJyC;AACM;AACF;AACU;AAEV;AAEN;AAEvC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAQ;KACpB;CACF,CAAC;AAWF,IAAa,cAAc,GAA3B,MAAa,cAAc;CAAG;AAAjB,cAAc;IAT1B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,mDAAQ,CAAC;KACzB,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;ACzB3B,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;ACAb;AACwB;AAC1C;AAQhC,IAAa,QAAQ,GAArB,MAAa,QAAQ;IAKnB,YAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAHnC,aAAQ,GAAK,EAAE,CAAC,OAAM;QACvB,SAAI,GAAK,CAAC,CAAC,CAAE,IAAI;QACjB,SAAI,GAAK,EAAE,CAAC,CAAK,OAAO;IACgB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,IAAI;QACT,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAED,OAAO,CAAC,KAAK;QACX,IAAI,GAAG,GAAC,2BAA2B,CAAC;QACpC,yDAAyD;QACzD,IAAI,SAAS,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;QACpE,OAAO,CAAC,GAAG,CAAC,YAAY,GAAC,SAAS,CAAC,CAAC;QACpC,IAAG,SAAS,IAAE,EAAE,EAAC;YACf,IAAI,QAAQ,GAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;YACrD,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,EAAC,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAC,GAAG,CAAC,IAAI,CAAC;gBACvB,OAAO,CAAC,GAAG,CAAC,YAAY,GAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnD,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,KAAK,EAAC,MAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAC,GAAE,CAAC;gBACjC,UAAU;gBACV,IAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,EAAE,EAAC;oBACpB,KAAK,EAAC,MAAK,CAAC,MAAM,CAAC,QAAQ,GAAC,IAAI,EAAC,GAAE,CAAC;iBACrC;gBACD,WAAW;gBACX,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,sBAAsB,EAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YAC5F,CAAC,CAAC,CAAC;SACJ;aACG;YACF,IAAI,CAAC,QAAQ,GAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;SACrC;QAED,uDAAuD;QACvD,cAAc;QACd,2BAA2B;QAC3B,yDAAyD;QAEzD,iBAAiB;QACjB,sCAAsC;QACtC,eAAe;QACf,mCAAmC;QACnC,2CAA2C;QAC3C,MAAM;QACN,KAAK;IACP,CAAC;IAED,YAAY,CAAC,IAAI;QACf,OAAO,qDAAE,CAAC,MAAM,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACvC,CAAC;IAED,gBAAgB,CAAC,IAAI;QACnB,OAAO,qDAAE,CAAC,MAAM,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;IAChD,CAAC;CACF;;YAvDiC,+EAAW;;AALhC,QAAQ;IALpB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,kKAA+B;;KAEhC,CAAC;2EAMgC,+EAAW;GALhC,QAAQ,CA4DpB;AA5DoB","file":"serving-technical-support-com-list-list-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button text=\\\"返回\\\" defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>技术支持</ion-title>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n      <ion-searchbar></ion-searchbar>\\n  </ion-toolbar>\\n  <ion-toolbar>\\n      <ion-segment>\\n          <ion-segment-button checked>\\n              <ion-label>全部</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button>\\n              <ion-label>处理中</ion-label>\\n          </ion-segment-button>\\n          <ion-segment-button>\\n              <ion-label>已完成</ion-label>\\n          </ion-segment-button>\\n      </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <div class=\\\"list_content\\\" *ngIf=\\\"!flag\\\">\\n        <ion-list lines=\\\"full\\\">\\n            <ion-item-divider>\\n                <ion-label>\\n                    2019-10\\n                </ion-label>\\n            </ion-item-divider>\\n            <ion-item *ngFor=\\\"let item of dataList\\\" [routerLink]=\\\"['/serving/ts/detail']\\\" [queryParams]=\\\"{id:item.id}\\\">\\n                <ion-icon slot=\\\"start\\\" color=\\\"primary\\\" name=\\\"hammer\\\" size=\\\"large\\\"></ion-icon>\\n                <ion-label>\\n                    <h2>{{item.mcs_name}}</h2>\\n                    <p>施工项目：{{item.mcs_name}}</p>\\n                    <p>施工日期：{{FormatToDateTime(mcs_repairdate)}}</p>\\n                    <p *ngIf=\\\"item.mcs_orderstatus==10\\\">施工状态：未处理</p>\\n                    <p *ngIf=\\\"item.mcs_orderstatus==30\\\">施工状态：处理中</p>\\n                    <p *ngIf=\\\"item.mcs_orderstatus==40\\\">施工状态：已关闭</p>\\n                    <p *ngIf=\\\"item.mcs_orderstatus==50\\\">施工状态：已取消</p>\\n                </ion-label>\\n            </ion-item>\\n            <ion-item-divider></ion-item-divider>\\n        </ion-list>\\n        <ion-infinite-scroll *ngIf=\\\"hasInfiniteData\\\" threshold=\\\"100px\\\" (ionInfinite)=\\\"getList($event)\\\">\\n            <ion-infinite-scroll-content\\n              loadingSpinner=\\\"bubbles\\\"\\n              loadingText=\\\"努力加载中...\\\">\\n            </ion-infinite-scroll-content>\\n        </ion-infinite-scroll>\\n  \\n    </div>\\n</ion-content>\\n\"","'use strict';\n\n/**\n * 将输入的任意对象转换成 Date，如果装换失败将返回当前时间\n * @param  {any} datetime 需要被格式化的时间\n * @return {Date}         转换好的 Date\n */\nfunction getDateObject(datetime) {\n  var t = datetime instanceof Date ? datetime : new Date(datetime);\n  if (!t.getDate()) {\n    t = new Date();\n  }\n  return t;\n}\n\n/**\n * 格式化时间\n * @param  {Date}   datetime  需要被格式化的时间\n * @param  {string} formatStr 格式化字符串，默认为 'YYYY-MM-DD HH:mm:ss'\n * @return {string}           格式化后的时间字符串\n */\nfunction format(datetime, formatStr) {\n  var t = getDateObject(datetime);\n  var hours = undefined,\n      o = undefined,\n      i = 0;\n  formatStr = formatStr || 'YYYY-MM-DD HH:mm:ss';\n  hours = t.getHours();\n  o = [['M+', t.getMonth() + 1], ['D+', t.getDate()],\n  // H 24小时制\n  ['H+', hours],\n  // h 12小时制\n  ['h+', hours > 12 ? hours - 12 : hours], ['m+', t.getMinutes()], ['s+', t.getSeconds()]];\n  // 替换 Y\n  if (/(Y+)/.test(formatStr)) {\n    formatStr = formatStr.replace(RegExp.$1, (t.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n  // 替换 M, D, H, h, m, s\n  for (; i < o.length; i++) {\n    if (new RegExp('(' + o[i][0] + ')').test(formatStr)) {\n      formatStr = formatStr.replace(RegExp.$1, RegExp.$1.length === 1 ? o[i][1] : ('00' + o[i][1]).substr(('' + o[i][1]).length));\n    }\n  }\n  // 替换 a/A 为 am, pm\n  return formatStr.replace(/a/ig, hours > 11 ? 'pm' : 'am');\n}\n\n/**\n * CONST and VAR for .fromNow\n */\n// 预设语言：英语\nvar LOCALE_EN = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  mm: '%s minutes',\n  hh: '%s hours',\n  dd: '%s days',\n  MM: '%s months',\n  yy: '%s years'\n};\n// 预设语言：简体中文\nvar LOCALE_ZH_CN = {\n  future: '%s内',\n  past: '%s前',\n  s: '几秒',\n  mm: '%s分钟',\n  hh: '%s小时',\n  dd: '%s天',\n  MM: '%s月',\n  yy: '%s年'\n};\n// 当前本地化语言对象\nvar _curentLocale = undefined;\n\n/**\n * 修改本地化语言\n * @param  {string|Object}   string: 预设语言 `zh-cn` 或 `en`；Object: 自定义 locate 对象\n */\nfunction locate(arg) {\n  var newLocale = undefined,\n      prop = undefined;\n  if (typeof arg === 'string') {\n    newLocale = arg === 'zh-cn' ? LOCALE_ZH_CN : LOCALE_EN;\n  } else {\n    newLocale = arg;\n  }\n  if (!_curentLocale) {\n    _curentLocale = {};\n  }\n  for (prop in newLocale) {\n    if (newLocale.hasOwnProperty(prop) && typeof newLocale[prop] === 'string') {\n      _curentLocale[prop] = newLocale[prop];\n    }\n  }\n}\n\n/**\n * CONST for .fromNow\n */\n// 各计算区间\nvar DET_STD = [['yy', 31536e6], // 1000 * 60 * 60 * 24 * 365 一年月按 365 天算\n['MM', 2592e6], // 1000 * 60 * 60 * 24 * 30 一个月按 30 天算\n['dd', 864e5], // 1000 * 60 * 60 * 24\n['hh', 36e5], // 1000 * 60 * 60\n['mm', 6e4], // 1000 * 60\n['s', 0]];\n\n/**\n * 计算给出时间和当前时间的时间距离\n * @param  {Date}   datetime 需要计算的时间\n * @return {string}          时间距离\n */\n// 只要大于等于 0 都是秒\nfunction fromNow(datetime) {\n  if (!_curentLocale) {\n    // 初始化本地化语言为 en\n    locate('');\n  }\n  var det = +new Date() - +getDateObject(datetime);\n  var format = undefined,\n      str = undefined,\n      i = 0,\n      detDef = undefined,\n      detDefVal = undefined;\n  if (det < 0) {\n    format = _curentLocale.future;\n    det = -det;\n  } else {\n    format = _curentLocale.past;\n  }\n  for (; i < DET_STD.length; i++) {\n    detDef = DET_STD[i];\n    detDefVal = detDef[1];\n    if (det >= detDefVal) {\n      str = _curentLocale[detDef[0]].replace('%s', parseInt(det / detDefVal, 0) || 1);\n      break;\n    }\n  }\n  return format.replace('%s', str);\n}\n\nexports.format = format;\nexports.locate = locate;\nexports.fromNow = fromNow;","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZpbmcvdGVjaG5pY2FsLXN1cHBvcnQuY29tL2xpc3QvbGlzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from '../../../base/base.ser/http-service.service';\r\nimport sd from 'silly-datetime';\r\nimport { debug } from 'util';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.page.html',\r\n  styleUrls: ['./list.page.scss'],\r\n})\r\nexport class ListPage implements OnInit {\r\n\r\n  private dataList:any=[];//列表数据\r\n  public page:any=1;  //分页\r\n  public sort:any='';     //排序的参数\r\n  constructor(private httpService:HttpService) { }\r\n\r\n  ngOnInit() {\r\n    this.getList(null);\r\n  }\r\n\r\n  search(name){\r\n    this.getList(null);\r\n  }\r\n\r\n  getList(event){\r\n    var api='/api/tech-support/GetList';\r\n    //this.httpService.ClearDataCache(\"technicalsupportlist\")\r\n    var cachedata=this.httpService.GetDataCache(\"technicalsupportlist\");\r\n    console.log(\"cachedata:\"+cachedata);\r\n    if(cachedata==\"\"){\r\n      var response=this.httpService.getForToaken(api,null);\r\n      response.subscribe((res)=>{\r\n        this.dataList=res.data;\r\n        console.log(\"stringify:\"+JSON.stringify(res.data));\r\n        this.page++;\r\n        event?event.target.complete():'';\r\n        //判断是否有新数据\r\n        if(res.data.length<10){\r\n          event?event.target.disabled=true:\"\";\r\n        }\r\n        //设置数据存储到本地\r\n        this.httpService.SetDataCache(\"technicalsupportlist\",JSON.stringify(res.data).toString());\r\n      });\r\n    }\r\n    else{\r\n      this.dataList=JSON.parse(cachedata);\r\n    }    \r\n    \r\n    // this.httpService.ajaxGet(api).then((response:any)=>{\r\n    //   debugger;\r\n    //   console.log(response);\r\n    //   this.dataList=this.dataList.concat(response.result);\r\n\r\n    //   this.page++;\r\n    //   event?event.target.complete():'';\r\n    //   //判断是否有新数据\r\n    //   if(response.result.length<10){\r\n    //     event?event.target.disabled=true:\"\";\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  FormatToDate(date){\r\n    return sd.format(date, 'YYYY-MM-DD');\r\n  }\r\n\r\n  FormatToDateTime(date){\r\n    return sd.format(date, 'YYYY-MM-DD hh:mm:ss');\r\n  }\r\n}\r\n"],"sourceRoot":""}